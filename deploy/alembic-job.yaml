apiVersion: batch/v1
kind: Job
metadata:
  name: alembic-migration
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: alembic
          image: python:3.10
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Instalando dependencias necesarias...";
              apt-get update && apt-get install -y postgresql-client;
              pip install --no-cache-dir alembic sqlalchemy asyncpg psycopg2-binary;

              echo "Esperando a que PostgreSQL esté listo...";
              sleep 20;
              until PGPASSWORD=password psql -U user -h postgres -d empleos -c "SELECT 1" > /dev/null 2>&1; do
                echo "PostgreSQL no está listo, reintentando...";
                sleep 5;
              done;
              
              echo "PostgreSQL está listo. Creando BD si no existe...";
              PGPASSWORD=password psql -U user -h postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'empleos'" | grep -q 1 || \
              PGPASSWORD=password psql -U user -h postgres -c "CREATE DATABASE empleos";

              echo "Ejecutando migraciones con Alembic...";
              alembic upgrade head;
              echo "Migraciones completadas."
          env:
            - name: PGPASSWORD
              value: "password"
            - name: PGUSER
              value: "user"
            - name: PGDATABASE
              value: "empleos"
            - name: PGHOST
              value: "postgres"
